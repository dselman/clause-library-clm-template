import { v4 as uuidv4 } from 'uuid';
import * as crypto from 'crypto';
import { Neogma, Neo4jSupportedProperties, QueryBuilder, QueryRunner } from 'neogma';
import { ModelUtil } from "@accordproject/concerto-core";
import { ClauseQueryResult } from './document-generator';
import { checkEnv } from './auth.js';

checkEnv('OPENAI_API_KEY');

const neogma = new Neogma(
    {
        url: 'bolt://localhost:7687',
        username: 'neo4j',
        password: 'onesmallstep',
    },
    {
        logger: console.log,
        encrypted: false,
    }
);

const queryRunner = new QueryRunner({
    driver: neogma.driver,
    logger: console.log
});

async function getTemplate(bearerToken, accountId, templateId) {
    const url = `${process.env.CLAUSE_LIBRARY_URL}/accounts/${accountId}/templates/${templateId}`;
    return fetch(url, {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${bearerToken}`
        },
    });
}

async function getTemplateModel(bearerToken, accountId, templateModelName) {
    const url = `${process.env.CLAUSE_LIBRARY_URL}/accounts/${accountId}/templateModels/${templateModelName}/latest`;
    return fetch(url, {
        method: "GET",
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${bearerToken}`
        },
    });
}

async function omitUnusedProperties(bearerToken, accountId, templateModelName, obj:Neo4jSupportedProperties) : Promise<Neo4jSupportedProperties> {
    const templateModelResponse = await getTemplateModel(bearerToken, accountId, templateModelName);
    if(templateModelResponse.ok) {
        const templateModels = await templateModelResponse.json();
        const model = templateModels.length > 0 ? templateModels[0] : null;
        const decl = model ? model.declarations.find( d => d.name === templateModelName) : null;
        if(!decl) {
            throw new Error(`Failed to find template type ${templateModelName}`);
        }
        const newObj = {
        };
        decl.properties.forEach( property => {
            const value = obj[property.name]; // properties are optional
            if(value) {
                newObj[property.name] = value;
            }
        })
        return newObj;
    }
    else {
        throw new Error(`Failed to get template model ${templateModelName}`);
    }
}


// eslint-disable-next-line @typescript-eslint/no-unused-vars
export async function deleteGraph(_context: GraphContext) {
    return queryRunner.run('MATCH (n) DETACH DELETE n');
}

async function createIndex() {
    await queryRunner.run('DROP INDEX template_embeddings IF EXISTS');
    await queryRunner.run('CALL db.index.vector.createNodeIndex("template_embeddings", "Template", "embedding", 1536, "COSINE")');

    await queryRunner.run('DROP INDEX clause_embeddings IF EXISTS');
    return queryRunner.run('CALL db.index.vector.createNodeIndex("clause_embeddings", "Clause", "embedding", 1536, "COSINE")');
}

async function getEmbedding(text:string) {
    const url = 'https://api.openai.com/v1/embeddings';
    return fetch(url, {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`
        },
        body: JSON.stringify({
            input: text,
            model: 'text-embedding-ada-002'
        })
    });
}

// async function query() {
/*
MATCH (template:Template)
CALL db.index.vector.queryNodes('template_embeddings', 10, [
				0.001252019,
				-0.018940117,
				0.010182643,
				-0.052211855,
				0.0054509444,
				0.01190084,
				-0.0063633197,
				0.011388045,
				0.01807436,
				-0.03508317,
				0.02362853,
				0.036761407,
				0.027158156,
				-0.000063631116,
				0.0011421343,
				0.020698272,
				0.02400147,
				-0.0011804275,
				0.029275933,
				0.0076852655,
				-0.012433614,
				0.015024228,
				-0.038333092,
				0.013865444,
				-0.010369115,
				-0.0025373364,
				0.00020905137,
				-0.029595597,
				-0.0056707137,
				0.012620085,
				0.02337546,
				-0.0037061092,
				-0.018140955,
				-0.0015974896,
				-0.015263976,
				-0.015929943,
				-0.001569186,
				-0.005847195,
				0.012293761,
				-0.0138920825,
				0.0038293134,
				0.005873834,
				-0.01965936,
				0.0033381623,
				0.0038459625,
				0.013865444,
				0.008084846,
				0.0056973523,
				-0.0072324076,
				0.0005910462,
				0.014478134,
				-0.00045785267,
				-0.025373364,
				-0.014917673,
				-0.005514211,
				0.0007117528,
				-0.022123441,
				0.0048515736,
				-0.019459572,
				-0.0033098587,
				0.01600986,
				-0.005254484,
				-0.0110817,
				-0.00008813664,
				-0.0032932095,
				-0.011148296,
				-0.026811853,
				-0.016595911,
				0.014997589,
				-0.004265522,
				0.036201995,
				0.019459572,
				0.020858103,
				0.003939198,
				0.0010372445,
				-0.009403462,
				-0.013971999,
				-0.025519876,
				-0.027624333,
				0.008337914,
				0.002112782,
				-0.006050315,
				-0.023348821,
				0.007205769,
				0.013572418,
				0.00097314507,
				0.000840784,
				-0.0011837573,
				0.0031849898,
				0.0049747773,
				0.03918553,
				0.012966388,
				-0.022509703,
				-0.008590981,
				-0.05234505,
				0.016729105,
				0.016675828,
				0.041316625,
				0.018900158,
				-0.0022026876,
				0.020205455,
				0.016968854,
				-0.02871652,
				-0.005564159,
				-0.049201682,
				-0.0004944809,
				0.027464502,
				-0.025946096,
				0.019819194,
				-0.029275933,
				-0.013279392,
				0.009749765,
				-0.005234505,
				-0.017275197,
				0.0062700845,
				0.0013460869,
				0.001065548,
				0.005008076,
				-0.01006277,
				-0.021883693,
				0.018993394,
				-0.011421343,
				0.00841117,
				0.00031279662,
				0.02361521,
				-0.012340379,
				-0.0088573685,
				-0.046671007,
				0.0027371265,
				-0.010342476,
				0.0077052442,
				0.0060170167,
				-0.00009859441,
				0.011954118,
				-0.019459572,
				-0.00799827,
				0.008517724,
				0.020285372,
				-0.015783431,
				-0.013246095,
				0.020671632,
				0.021017935,
				-0.016555954,
				0.0029835345,
				0.0061468803,
				0.002234321,
				-0.0018930128,
				0.022922603,
				-0.002275944,
				-0.011587835,
				0.0062234667,
				-0.018926797,
				0.0039858157,
				0.0074122185,
				-0.007651967,
				0.00821804,
				-0.011681071,
				0.023308864,
				-0.010116047,
				-0.01989911,
				-0.010309177,
				-0.0042555328,
				0.024880547,
				0.0016282906,
				0.024560884,
				0.03526964,
				-0.014598008,
				-0.0021194417,
				0.003756057,
				0.017741375,
				0.016915575,
				-0.0020045622,
				-0.026239121,
				-0.0024957133,
				-0.00902386,
				0.024321135,
				0.013532461,
				-0.006529812,
				-0.023961512,
				-0.02562643,
				-0.0007879228,
				-0.010915208,
				0.014877715,
				0.031913165,
				-0.029648874,
				0.014398218,
				0.0044886214,
				0.018140955,
				0.004455323,
				-0.0077651814,
				0.00883073,
				0.00512462,
				0.00491817,
				-0.004858233,
				-0.65083677,
				-0.040037967,
				0.017341794,
				-0.057965815,
				0.005151259,
				0.019366335,
				0.020671632,
				-0.0014418197,
				-0.018753646,
				0.033378292,
				0.0024790643,
				0.021697223,
				0.0034297328,
				-0.028796436,
				0.00064349116,
				-0.013918721,
				0.006796199,
				-0.011388045,
				0.021271003,
				0.00430881,
				-0.015663557,
				0.025280127,
				0.0125801265,
				0.011547877,
				0.018114317,
				0.0070192977,
				0.030847616,
				-0.017914526,
				-0.026798533,
				0.008191401,
				-0.017794652,
				0.0025156925,
				-0.01928642,
				0.010901889,
				0.041742846,
				0.033911068,
				-0.0019995675,
				0.003676141,
				0.0024058078,
				0.045205876,
				-0.0067595704,
				-0.031007448,
				0.0315935,
				0.020445203,
				-0.017035449,
				0.006316702,
				0.04105024,
				-0.008431149,
				-0.015317254,
				0.0023708444,
				0.00023496167,
				-0.02254966,
				0.0067662303,
				0.0077651814,
				0.001304464,
				0.011634453,
				0.01599654,
				-0.011747668,
				0.0025523205,
				-0.0046484536,
				0.003239932,
				0.02444101,
				-0.0053477194,
				-0.053064294,
				-0.0054009967,
				-0.023455378,
				0.0038226538,
				0.0025007082,
				0.022176718,
				-0.01024924,
				-0.0015508719,
				0.01558364,
				-0.0020561747,
				-0.022523021,
				0.0062534353,
				0.006792869,
				0.006626377,
				-0.0038026746,
				-0.013146199,
				0.015303934,
				-0.0038293134,
				-0.020418564,
				-0.027544418,
				-0.004598506,
				0.019020032,
				0.0006222634,
				-0.003649502,
				-0.032898795,
				0.01826083,
				-0.01024924,
				0.027384585,
				0.012280442,
				0.023308864,
				0.004671762,
				-0.021484112,
				0.0028570008,
				0.00054567715,
				-0.0112015745,
				-0.019765917,
				0.010888569,
				-0.018420663,
				-0.010968485,
				-0.00063058804,
				-0.017168643,
				0.0069460412,
				0.0054509444,
				-0.011408024,
				0.0075986898,
				0.03756057,
				-0.02871652,
				0.007505454,
				-0.0022459754,
				-0.0065964083,
				-0.008024909,
				0.00013818826,
				-0.033911068,
				0.0076386477,
				0.02522685,
				-0.012660043,
				-0.019592766,
				-0.0028037233,
				0.0057173315,
				0.024547564,
				0.0072923447,
				-0.00012705413,
				0.014278344,
				0.006536471,
				-0.016755743,
				0.004665103,
				0.012879812,
				0.015050867,
				-0.020005666,
				0.007139172,
				0.013472524,
				-0.008437809,
				-0.009749765,
				0.00984966,
				-0.015144102,
				0.006489854,
				-0.013179498,
				-0.023109073,
				-0.022629578,
				-0.007505454,
				0.0068028583,
				-0.017474988,
				-0.024121344,
				-0.023455378,
				-0.015157421,
				-0.016489357,
				0.003449712,
				0.034044262,
				0.0032099634,
				0.0225763,
				-0.006013687,
				0.04821605,
				-0.00031092358,
				-0.01026256,
				-0.021630626,
				-0.01682234,
				-0.020391926,
				-0.0052877823,
				0.017967803,
				-0.034843422,
				-0.0029851994,
				0.032099634,
				-0.022323232,
				0.021111172,
				-0.013299372,
				-0.00042476243,
				-0.015423808,
				0.021484112,
				-0.008664237,
				-0.014558051,
				0.02605265,
				0.020951338,
				0.025533196,
				-0.00044328463,
				-0.0008274647,
				0.009336865,
				-0.0021177768,
				0.011314789,
				-0.01086193,
				-0.021231046,
				-0.0026805194,
				0.03713435,
				-0.0028403515,
				0.00861096,
				0.018780285,
				0.015343892,
				0.00276876,
				-0.023029158,
				0.006709623,
				0.02297588,
				0.0030867595,
				0.0026755247,
				0.00944342,
				-0.0026788544,
				-0.0059204516,
				-0.009949555,
				0.029782068,
				0.029222656,
				-0.01908663,
				0.00082621595,
				-0.028823076,
				0.00096898276,
				-0.017421711,
				0.0007017633,
				-0.020618355,
				0.02072491,
				0.015889985,
				0.013932041,
				-0.018593814,
				-0.0034863402,
				-0.026625382,
				0.005637415,
				0.03961175,
				0.0039724964,
				0.016196331,
				-0.002154405,
				-0.0019363007,
				-0.009583273,
				-0.015783431,
				0.044246882,
				0.005231175,
				0.024654118,
				-0.0059004724,
				0.025400002,
				0.033911068,
				0.020445203,
				-0.013592398,
				0.0031966441,
				0.0054875724,
				0.018100997,
				-0.007199109,
				0.031540222,
				0.0047949664,
				0.0011579511,
				-0.022283275,
				0.04065066,
				0.0057339803,
				-0.0001632661,
				0.033271737,
				0.016942214,
				0.006543131,
				-0.0003868855,
				-0.005564159,
				0.009583273,
				0.027198114,
				-0.02685181,
				0.006116912,
				-0.022696173,
				0.03630855,
				-0.012020714,
				0.0057073417,
				0.0377204,
				0.007951653,
				0.02278941,
				0.004964788,
				0.02007226,
				0.032925434,
				-0.002524017,
				0.0143049825,
				0.026798533,
				-0.0086509185,
				0.009383483,
				-0.02297588,
				0.016542634,
				-0.020418564,
				0.005727321,
				0.016382802,
				-0.0025373364,
				0.00045119302,
				0.010895229,
				0.024747353,
				0.022403149,
				0.013812167,
				-0.015903305,
				-0.009696487,
				-0.0056007872,
				0.030634508,
				-0.031700056,
				-0.00491484,
				0.031300474,
				0.046457894,
				0.008983902,
				-0.00013995724,
				-0.0012761602,
				0.013026325,
				-0.04203587,
				0.009163713,
				0.0063500004,
				0.0031133983,
				0.0025739647,
				0.0028053883,
				0.0023475357,
				-0.021457475,
				0.027171476,
				-0.033351656,
				-0.015530363,
				0.0025306765,
				0.004818275,
				-0.0079583125,
				-0.025706347,
				-0.00007414092,
				0.027091559,
				0.013439225,
				-0.0127865765,
				-0.00902386,
				0.012193866,
				-0.016542634,
				0.016236288,
				-0.006643026,
				-0.014504773,
				-0.010595543,
				-0.004055742,
				-0.008524384,
				-0.01804772,
				-0.0066563454,
				0.017435031,
				0.0002967718,
				0.013705612,
				-0.017142005,
				-0.023841638,
				0.019619403,
				0.08231359,
				0.0073789204,
				-0.0076386477,
				-0.010129366,
				-0.03590897,
				0.013519141,
				-0.024147984,
				-0.017528266,
				0.021497432,
				0.013345989,
				0.013812167,
				0.005004746,
				-0.008384531,
				0.0080315685,
				0.010642162,
				0.010409073,
				-0.0033864449,
				-0.012733299,
				-0.009323546,
				-0.010156005,
				-0.019366335,
				-0.024960464,
				-0.00533773,
				0.02091138,
				-0.022736132,
				-0.0038226538,
				0.05535522,
				0.055674884,
				0.0050447043,
				-0.010302518,
				0.007984951,
				0.009323546,
				-0.017102046,
				0.0058138967,
				-0.018780285,
				0.020991297,
				-0.0032282777,
				-0.023228947,
				0.009763084,
				0.018766966,
				0.03367132,
				-0.00013621118,
				0.019073311,
				-0.0074987947,
				0.0015217358,
				-0.01643608,
				-0.0009872969,
				0.023921555,
				-0.0092036715,
				-0.0007442187,
				0.0025539855,
				0.006136891,
				-0.011501259,
				-0.009190352,
				0.00819806,
				-0.0047416887,
				0.0072723655,
				-0.0075653912,
				-0.012113949,
				-0.04493949,
				-0.05482245,
				-0.036681492,
				-0.0040490828,
				-0.020764869,
				-0.010109387,
				0.010908549,
				-0.010562245,
				-0.010322497,
				-0.011614474,
				0.01538385,
				0.027024962,
				-0.01642276,
				-0.02196361,
				0.0014068565,
				0.013905402,
				0.011914159,
				0.030820977,
				-0.02031201,
				-0.015450447,
				-0.01086193,
				0.0005003081,
				-0.017954485,
				-0.012213845,
				-0.0143715795,
				0.012660043,
				-0.010522287,
				-0.027171476,
				-0.014997589,
				-0.017062088,
				-0.0047883065,
				0.004355428,
				-0.018953437,
				0.018007763,
				0.013665654,
				-0.026425593,
				0.0011529563,
				-0.014997589,
				0.02850341,
				0.0012595111,
				0.012886472,
				-0.024254538,
				-0.00040644832,
				0.011454642,
				-0.033724595,
				0.012893132,
				0.0050513637,
				-0.012553488,
				0.022536341,
				-0.0058605145,
				0.005780598,
				0.0048449137,
				-0.0018763635,
				0.00036524158,
				-0.011214893,
				-0.004059072,
				0.012766598,
				0.0076253284,
				0.013905402,
				0.0033697959,
				-0.0049581286,
				-0.0188602,
				0.021284323,
				0.021057894,
				0.0042355536,
				-0.033245098,
				-0.009370163,
				0.0037194288,
				-0.02421458,
				-0.0022609597,
				-0.006196828,
				-0.024773993,
				0.020431884,
				-0.0009173703,
				-0.0077318833,
				-0.02606597,
				-0.00012497297,
				0.008018249,
				0.014131831,
				-0.009843,
				-0.008690876,
				0.016702466,
				0.009197012,
				0.011348086,
				-0.019459572,
				0.008184741,
				-0.028849714,
				-0.0017448349,
				-0.005787258,
				-0.014637967,
				0.040490825,
				0.0022093472,
				-0.0070659155,
				-0.013345989,
				0.026971685,
				-0.006426587,
				-0.034949977,
				-0.004824935,
				-0.0146512855,
				0.0151973795,
				0.0076453076,
				0.00061851734,
				0.0016049817,
				-0.003301534,
				0.016595911,
				0.018926797,
				0.0015308929,
				0.0018647091,
				-0.011461302,
				-0.03718763,
				0.017954485,
				-0.011701049,
				0.025732987,
				0.016542634,
				-0.0071125333,
				0.007032617,
				-0.012979708,
				0.0048882016,
				-0.0038126642,
				-0.0020478503,
				-0.00923031,
				0.0048915315,
				-0.02256298,
				-0.0039025699,
				0.025706347,
				-0.022642896,
				-0.004212245,
				0.017022131,
				0.010222602,
				0.0032166233,
				-0.0066729947,
				0.029089462,
				0.006626377,
				0.011114998,
				0.00841117,
				0.0047716573,
				-0.0070659155,
				-0.006340011,
				-0.002052845,
				-0.012686682,
				0.02360189,
				0.010295859,
				0.004671762,
				0.0015883326,
				-0.010389093,
				-0.0073123234,
				0.0033914398,
				0.0024058078,
				-0.025866179,
				-0.0039058996,
				-0.0167957,
				-0.016569272,
				-0.025013741,
				-0.033751234,
				-0.009529996,
				-0.0049381494,
				0.0009190352,
				-0.038279813,
				0.016476037,
				-0.0037627167,
				-0.016262928,
				-0.007445517,
				0.008943944,
				0.039292086,
				0.005723991,
				0.021710541,
				0.058498587,
				0.0027471161,
				0.0044786315,
				0.0077718413,
				0.0062234667,
				-0.001784793,
				0.025719667,
				0.01210729,
				-0.019113269,
				-0.0012137259,
				0.004658443,
				0.025932776,
				0.0022842686,
				-0.023082435,
				0.0078917155,
				0.010215942,
				0.015530363,
				-0.018620452,
				0.001632453,
				-0.0070126383,
				0.019579446,
				-0.0038193238,
				0.020578397,
				-0.000518206,
				-0.008491086,
				0.00017190287,
				0.008284636,
				-0.02172386,
				0.046005037,
				0.023442058,
				-0.02686513,
				-0.010109387,
				0.0014126836,
				-0.0019562796,
				-0.0033265078,
				-0.019859152,
				0.0027138176,
				0.019805875,
				-0.012986367,
				-0.0016474372,
				0.030501314,
				-0.015903305,
				-0.0134059265,
				-0.013825486,
				0.024494287,
				0.011141637,
				-0.02954232,
				-0.0030867595,
				0.006300053,
				0.018607132,
				-0.0037693763,
				-0.0062267967,
				-0.026731936,
				-0.0023059126,
				-0.007878396,
				-0.010195963,
				0.0184473,
				0.010548926,
				-0.00307677,
				-0.010735396,
				-0.023708444,
				0.003652832,
				-0.023308864,
				0.0094767185,
				0.034337286,
				-0.002339211,
				0.0045385687,
				-0.0039225486,
				-0.0016624215,
				0.009736446,
				0.01888684,
				0.008391191,
				0.0075787106,
				-0.019819194,
				0.016955534,
				0.013212796,
				0.007545412,
				-0.020165497,
				-0.003016833,
				-0.0067795496,
				-0.011940798,
				0.02890299,
				-0.022123441,
				-0.026105927,
				-0.013572418,
				0.004864893,
				0.0005098814,
				0.012400315,
				-0.01210063,
				-0.0032082987,
				-0.0068661254,
				0.02091138,
				-0.024041427,
				0.008917306,
				0.023122393,
				-0.01884688,
				-0.0147844795,
				0.023894915,
				-0.033937708,
				-0.0035829053,
				0.012353698,
				0.0061502103,
				-0.0075986898,
				-0.022003567,
				-0.0048482437,
				-0.017088726,
				0.01435826,
				-0.0147844795,
				-0.01928642,
				0.020032303,
				-0.014464815,
				-0.0024274518,
				0.00018418164,
				0.011940798,
				-0.0055941273,
				0.0039891456,
				0.000113318536,
				0.02400147,
				0.016169691,
				-0.026678659,
				-0.014957631,
				-0.0012278777,
				-0.015783431,
				-0.0080315685,
				0.0021077872,
				-0.017155323,
				0.045818567,
				-0.0047949664,
				-0.013825486,
				-0.026505508,
				-0.037054434,
				-0.009190352,
				-0.004248873,
				-0.02172386,
				0.0073589412,
				0.026771896,
				-0.0031949792,
				-0.008551023,
				0.019166546,
				0.014384899,
				0.028876353,
				-0.00016389045,
				-0.0038193238,
				0.013865444,
				-0.0299419,
				0.04310142,
				0.007239067,
				-0.02440105,
				-0.018114317,
				0.008937284,
				-0.0031100684,
				0.016875617,
				0.035376195,
				0.00012549326,
				-0.010735396,
				-0.0010039461,
				0.02461416,
				0.003038477,
				0.024787312,
				0.009909597,
				-0.04635134,
				0.004971448,
				0.00023433733,
				0.0017315156,
				-0.016702466,
				-0.011467961,
				-0.0018130966,
				0.003364801,
				0.0042388835,
				-0.012506871,
				0.004904851,
				-0.0121672265,
				0.0062234667,
				-0.005637415,
				0.013665654,
				-0.0022726143,
				0.019139906,
				0.0011254852,
				-0.025533196,
				-0.035935607,
				0.0027987286,
				-0.025772944,
				-0.015730154,
				0.018740326,
				-0.0010097732,
				0.0031233877,
				-0.012546828,
				-0.03058123,
				-0.024654118,
				-0.005151259,
				0.009916257,
				0.0055541694,
				-0.016103094,
				0.015357211,
				0.012080651,
				-0.027384585,
				0.009183693,
				-0.040304355,
				0.0006501508,
				0.0015949922,
				-0.009969534,
				-0.00532774,
				-0.012893132,
				-0.005783928,
				-0.01024924,
				-0.037267543,
				0.000829962,
				0.0029385819,
				0.0013976994,
				-0.005677373,
				0.016169691,
				0.21673247,
				-0.00759203,
				0.012180546,
				0.013192817,
				-0.038706034,
				0.003915889,
				0.011874201,
				0.013665654,
				0.009083797,
				0.016342843,
				-0.030048456,
				-0.0007925014,
				0.0038126642,
				0.015770111,
				0.021497432,
				-0.027730888,
				-0.047310334,
				-0.014917673,
				-0.027158156,
				0.023482015,
				0.005910462,
				-0.01600986,
				-0.011747668,
				-0.009090457,
				0.022949241,
				0.02280273,
				-0.021430835,
				0.025160253,
				0.02195029,
				0.014904354,
				-0.011807605,
				-0.0015059192,
				0.01148128,
				0.002031201,
				-0.013352649,
				-0.016156372,
				-0.0031833248,
				-0.001415181,
				0.006183509,
				-0.009256949,
				0.011228213,
				-0.00922365,
				-0.00430215,
				-0.015850028,
				0.0076253284,
				0.041076876,
				-0.0072190883,
				0.004045753,
				-0.010269219,
				0.004345438,
				-0.04989429,
				0.0006239283,
				0.018793603,
				0.036788046,
				-0.016502677,
				0.033325016,
				-0.005171238,
				0.016249608,
				-0.007905034,
				-0.006649686,
				-0.010728737,
				-0.0012628409,
				-0.010795333,
				0.011827583,
				-0.010195963,
				0.024267858,
				-0.018900158,
				0.004901521,
				0.036601577,
				-0.040570743,
				0.013392608,
				-0.02401479,
				-0.013052964,
				0.017474988,
				-0.0035429474,
				-0.015357211,
				0.0038892503,
				0.031913165,
				0.033245098,
				0.0012045688,
				-0.01846062,
				0.0029019536,
				-0.004798296,
				0.01620965,
				-0.019752597,
				-0.019539488,
				0.02135092,
				0.006809518,
				0.013013005,
				-0.01682234,
				0.0017964474,
				-0.018660411,
				-0.01948621,
				-0.02132428,
				0.0025373364,
				0.01189418,
				0.0015250656,
				-0.006939382,
				-0.0025772944,
				-0.008164762,
				-0.027970636,
				0.096911594,
				0.008597641,
				-0.0006855303,
				-0.025613112,
				0.0012328724,
				-0.014225067,
				0.018980075,
				0.020764869,
				-0.02749114,
				0.0069060833,
				-0.014504773,
				-0.0051579187,
				-0.018713688,
				0.0098230215,
				0.009796383,
				0.010975145,
				-0.011574516,
				0.027624333,
				-0.014637967,
				0.002830362,
				-0.0010863595,
				0.0036195335,
				0.0107886745,
				0.008297956,
				0.006939382,
				0.00087075256,
				-0.028023914,
				0.0150641855,
				-0.025999373,
				0.010542266,
				-0.005031385,
				-0.0012553488,
				-0.0033980994,
				-0.006626377,
				-0.009909597,
				0.029169379,
				0.006643026,
				-0.025160253,
				0.012400315,
				-0.0054276353,
				-0.0053410595,
				-0.005068013,
				-0.00014453576,
				0.010508968,
				-0.0030484665,
				-0.0024224569,
				-0.009796383,
				0.012486892,
				-0.010562245,
				-0.025386682,
				-0.040304355,
				-0.005377688,
				-0.01559696,
				0.030954171,
				-0.013705612,
				-0.024108024,
				-0.021870375,
				-0.030208288,
				0.02727803,
				-0.047923025,
				0.007858417,
				0.020458523,
				-0.0066763246,
				-0.012899791,
				-0.005021395,
				-0.16963525,
				0.009889618,
				-0.015317254,
				0.00053152535,
				0.024547564,
				-0.004258862,
				-0.0046318043,
				0.021710541,
				-0.021084532,
				0.014331621,
				0.040544104,
				-0.00013142453,
				-0.02522685,
				-0.027331308,
				-0.000851606,
				-0.007858417,
				-0.027997276,
				0.008464447,
				0.012240483,
				0.019392975,
				0.011947458,
				-0.030661145,
				-0.01066214,
				0.0010389093,
				0.009969534,
				0.00031529402,
				-0.032126274,
				0.0018763635,
				-0.026412273,
				-0.008104825,
				-0.005107971,
				0.007845097,
				0.028849714,
				0.02360189,
				0.022909284,
				-0.00492816,
				-0.01559696,
				0.0032249477,
				0.0077252234,
				-0.001395202,
				-0.00842449,
				0.02975543,
				0.01168773,
				-0.002812048,
				0.0052478244,
				0.0048482437,
				0.028237024,
				0.014145151,
				-0.006749581,
				-0.015210698,
				-0.012400315,
				-0.041902676,
				0.022709493,
				-0.00020478501,
				0.0050580236,
				0.010548926,
				-0.02091138,
				0.00028594982,
				-0.014344941,
				-0.0044220244,
				0.007878396,
				-0.01602318,
				0.03636183,
				-0.012693341,
				-0.0063266917,
				-0.040117886,
				-0.00006108171,
				-0.001201239,
				-0.017581543,
				0.011055062,
				0.021191087,
				-0.024773993,
				0.008917306,
				-0.02853005,
				0.0014717883,
				0.0033331676,
				-0.016675828,
				0.015210698,
				0.00007523352,
				-0.031220559,
				-0.017435031,
				0.0070192977,
				0.0059970375,
				-0.02914274,
				-0.009803042,
				-0.0038259835,
				-0.0018097667,
				0.0053077615,
				0.00035691698,
				0.0051579187,
				0.008897326,
				-0.024893867,
				0.0038093342,
				-0.019619403,
				0.015210698,
				0.023548612,
				0.0073789204,
				0.0054909023,
				-0.0017581542,
				0.006027006,
				-0.0033514816,
				0.00016409856,
				0.0018364055,
				0.024454327,
				-0.0016957199,
				0.0062700845,
				-0.0062700845,
				0.013492502,
				0.024374412,
				-0.0121672265,
				-0.017701417,
				0.03796015,
				0.02400147,
				-0.009263609,
				0.025280127,
				0.00093901425,
				0.010988465,
				-0.018207552,
				-0.015903305,
				-0.02726471,
				0.057912536,
				0.013299372,
				0.023242267,
				0.0022892635,
				-0.011747668,
				0.00026139227,
				-0.105063036,
				-0.044593185,
				0.01683566,
				-0.00246408,
				0.0018280809,
				0.025346724,
				0.001302799,
				0.015450447,
				0.012680022,
				-0.0010996789,
				0.0054109865,
				-0.039132252,
				-0.01600986,
				-0.030208288,
				0.024108024,
				0.01640944,
				-0.029648874,
				-0.0213376,
				-0.036175355,
				0.02089806,
				-0.026971685,
				0.0062501053,
				0.005557499,
				-0.009316886,
				-0.002177714,
				-0.03532292,
				-0.029302571,
				0.02606597,
				0.014824437,
				-0.027131518,
				-0.0019612743,
				-0.018500578,
				-0.018314108,
				-0.0022060175,
				-0.011794285,
				0.007119193,
				-0.022602938,
				-0.034816783,
				0.01680902,
				-0.008078186,
				0.019579446,
				-0.002234321,
				0.006832827,
				-0.031140642,
				0.01539717,
				0.0009456739,
				-0.010475669,
				0.01026256,
				0.012340379,
				-0.0027621004,
				-0.035935607,
				-0.018380703,
				-0.009843,
				-0.009576613,
				0.015889985,
				-0.007845097,
				-0.0069260625,
				0.012220505,
				-0.052611437,
				-0.0061102523,
				0.0026422262,
				-0.004665103,
				0.00018688715,
				0.00025951923,
				-0.0054476145,
				0.012500211,
				-0.028556688,
				-0.02932921,
				0.0055508395,
				-0.008371212,
				0.0005519206,
				0.0024940483,
				-0.01127483,
				0.017088726,
				-0.005627426,
				-0.00430215,
				-0.002400813,
				-0.023894915,
				0.013259414,
				-0.009296907,
				0.01726188,
				-0.02607929,
				0.015503724,
				-0.0143715795,
				0.039078977,
				0.03801343,
				0.026518827,
				0.005021395,
				0.013652335,
				0.0035196384,
				0.006732932,
				0.011874201,
				0.011221553,
				-0.0060569746,
				-0.021497432,
				0.010329156,
				-0.01826083,
				-0.009177033,
				-0.00035629264,
				0.008038228,
				-0.0073722606,
				-0.0045319092,
				-0.046324704,
				0.027571056,
				-0.00047699924,
				0.00049572956,
				0.0031034087,
				0.00472171,
				0.012073992,
				-0.023402099,
				-0.0002326724,
				0.0061202417,
				-0.026958367,
				0.030181648,
				0.004841584,
				-0.023948193,
				-0.029036185,
				0.007918354,
				0.014837757,
				-0.025067018,
				0.019046672,
				-0.016249608,
				0.012553488,
				0.01643608,
				0.02996854,
				-0.00087324996,
				-0.0022676194,
				-0.0026488858,
				0.0014018617,
				0.014464815,
				-0.027331308,
				-0.007898375,
				0.030714422,
				-0.012460252,
				-0.00030884246,
				0.006726272,
				-0.0030318173,
				-0.0025223522,
				-0.0038526221,
				0.019965706,
				0.06515826,
				0.0060436553,
				-0.015317254,
				-0.041103516,
				0.002029536,
				-0.010515627,
				-0.011634453,
				0.018380703,
				-0.03263241,
				-0.010149346,
				-0.0021926982,
				-0.012280442,
				0.036548298,
				0.018766966,
				-0.020338649,
				-0.030501314,
				-0.010841952,
				-0.011534558,
				0.02607929,
				-0.004755008,
				0.006439906,
				-0.04984101,
				0.030527951,
				-0.012593446,
				-0.0034730206,
				-0.011308129,
				0.0006555618,
				0.002335881,
				-0.021257684,
				0.00050072436,
				0.0109951245,
				-0.011141637,
				-0.00033589738,
				0.0048382543,
				0.004801626,
				-0.021430835,
				-0.010335816,
				0.0075986898,
				0.0102559,
				0.012480232,
				-0.022229996,
				0.034204092,
				0.0039092293,
				-0.028982908,
				-0.0055874675,
				0.013718931,
				0.021590667,
				0.022669535,
				0.0012994691,
				-0.00090238603,
				0.0031300473,
				-0.011474621,
				-0.018607132,
				0.01989911,
				0.0003375623,
				0.0060469853,
				-0.018766966,
				0.006113582,
				-0.011767646,
				0.007605349,
				-0.004968118,
				0.008690876,
				0.02071159,
				0.008657578,
				0.020018984,
				-0.012966388,
				-0.02089806,
				0.013865444,
				-0.03257913,
				-0.024574202,
				-0.010908549,
				0.017448349,
				0.01518406,
				0.0034929998,
				0.013252754,
				0.0073789204,
				-0.027890721,
				0.013412586,
				-0.005827216,
				-0.010162665,
				-0.00985632,
				0.004904851,
				-0.00093818177,
				0.0000896975,
				0.005910462,
				-0.012293761,
				0.012693341,
				0.017608183,
				0.028423494,
				-0.027864082,
				-0.0031899845,
				0.0024740694,
				0.00044453333,
				0.01925978,
				0.014691244,
				-0.0042222342,
				-0.019552806,
				0.015743474,
				-0.009083797,
				0.009916257,
				0.013159518,
				0.02807719,
				0.029462405,
				-0.01848726,
				0.012213845,
				0.02525349,
				-0.016236288,
				0.009470059,
				0.012120609,
				0.008923965,
				-0.004968118,
				0.0073722606,
				0.0022642897,
				-0.000058844475,
				-0.023921555,
				0.018940117,
				-0.0053044315,
				-0.0014792804,
				0.008897326,
				-0.023828318,
				-0.00002023917,
				0.023122393,
				0.025879499,
				0.0057073417,
				-0.022602938,
				-0.026105927,
				-0.021524072,
				-0.002543996,
				-0.0048449137,
				-0.0066729947,
				-0.006486524,
				0.0033181834,
				0.0035795756,
				-0.00035941435,
				-0.015037547,
				0.008384531,
				0.011987416,
				0.010382434,
				-0.0010447366,
				0.006952701,
				-0.0033914398,
				-0.010016152,
				0.008324594,
				-0.012207185,
				-0.017941166,
				-0.0031350423,
				0.0048116157,
				0.010821973,
				0.006296723,
				-0.0089972215
			])
YIELD node AS similarTemplate, score
MATCH (similarTemplate)
RETURN similarTemplate.content AS content, score limit 5
*/
// }

export async function addAgreementToGraph(context, agreementName: string, agreementData: Neo4jSupportedProperties): Promise<string> {
    const agreementId = uuidv4();
    const queryBuilder = new QueryBuilder().create(
        {
            label: 'Agreement',
            properties: {
                name: agreementName,
                identifier: agreementId,
                ...agreementData
            }
        });

    await queryBuilder.run();

    const envelopeId = await addEnvelopeToGraph();

    await mergeNode(context, 'Company', {identifier: 'DocuSign'});
    await mergeNode(context, 'Company', {identifier: 'Microsoft'});
    const DS_EMPLOYEES = ['Dan Selman', 'Kamal Hathi', 'Dmitry Krakovsky', 'Inhi Suh', 'Nikhil Patel', 'Allan Thygesen'];
    const MS_EMPLOYEES = ['Satya Nadella', 'Bill Gates', 'Scott Guthrie', 'Brad Smith', 'Amy Hood', 'Kathleen Hogan'];

    for(let n=0; n < DS_EMPLOYEES.length; n++) {
        const party = DS_EMPLOYEES[n];
        await mergeNode(context, 'Individual', {identifier: party});
        await mergeRelationship(context, 'Individual', party, 'Company', 'DocuSign', 'EMPLOYED_BY');
    }

    for(let n=0; n < MS_EMPLOYEES.length; n++) {
        const party = MS_EMPLOYEES[n];
        await mergeNode(context, 'Individual', {identifier: party});
        await mergeRelationship(context, 'Individual', party, 'Company', 'Microsoft', 'EMPLOYED_BY');
    }

    const dsShuffled = DS_EMPLOYEES.sort(() => 0.5 - Math.random());
    const dsSigners = dsShuffled.slice(0, 2);
    const msShuffled = MS_EMPLOYEES.sort(() => 0.5 - Math.random());
    const msSigners = msShuffled.slice(0, 2);

    for(let n=0; n < dsSigners.length; n++) {
        const signer = dsSigners[n];
        await mergeRelationship(context, 'Envelope', envelopeId, 'Individual', signer, 'SIGNED_BY');
    }

    for(let n=0; n < msSigners.length; n++) {
        const signer = msSigners[n];
        await mergeRelationship(context, 'Envelope', envelopeId, 'Individual', signer, 'SIGNED_BY');
    }

    await mergeRelationship(context, 'Envelope', envelopeId, 'Agreement', agreementId, 'CONTAINS');
    return agreementId;
}

export async function addEnvelopeToGraph(): Promise<string> {
    const envelopeId = uuidv4();
    const queryBuilder = new QueryBuilder().create(
        {
            label: 'Envelope',
            properties: {
                name: `Envelope ${envelopeId}`,
                identifier: envelopeId,
            }
        });

    await queryBuilder.run();
    return envelopeId;
}

function getChecksum(obj:Neo4jSupportedProperties) {
    return crypto.createHash('md5').update(JSON.stringify(obj)).digest('hex');
}

async function mergeNode(context, label:string, properties: Neo4jSupportedProperties) {
    let where = '';
    const keys = Object.keys(properties);
    keys.forEach( (key,index) => {
        where += `${key}: ${JSON.stringify(properties[key])}`;
        if(index < keys.length-1) {
            where += ','
        }
    })
    return queryRunner.run(`MERGE (t:${label}{${where}})`);
}

async function mergeRelationship(context, sourceLabel:string, sourceIdentifier: 
    string, targetLabel:string, targetIdentifier:string, relationshipType:string) {
    return queryRunner.run(`MATCH(source:${sourceLabel} {identifier: '${sourceIdentifier}'}) MATCH(target:${targetLabel} {identifier: '${targetIdentifier}'})MERGE (source)-[:${relationshipType}]->(target)`);
}

export async function addClauseQueryResultToGraph(accessToken: string, accountId: string, context: GraphContext, agreementId: string, agreementData: Neo4jSupportedProperties, clauseQueryResult: ClauseQueryResult) {
    if (Array.isArray(clauseQueryResult.results)) {
        clauseQueryResult.results.forEach(async r => {
            const templateResponse = await getTemplate(accessToken, accountId, r.templateId);
            if (templateResponse.ok) {
                const template = await templateResponse.json();
                const shortTypeName = ModelUtil.getShortName(template.conceptReference);
                const usedData = await omitUnusedProperties(accessToken, accountId, shortTypeName, agreementData);
                const clauseProperties:Neo4jSupportedProperties = {
                    name: `${template.name} Clause`,
                    content: r.content,
                    ...usedData
                };
                const clauseId = getChecksum(clauseProperties);
                clauseProperties.identifier = clauseId;
                if(clauseProperties.content) {
                    const embeddingResponse = await getEmbedding(clauseProperties.content as string);
                    if(embeddingResponse.ok) {
                        const embedding = await embeddingResponse.json();
                        clauseProperties.embedding = embedding.data[0].embedding;
                    }
                    else {
                        throw new Error('Failed to get clause embeddings');
                    }
                }
                await mergeNode(context, 'Clause', clauseProperties);
                await mergeRelationship(context, 'Agreement', agreementId, 'Clause', clauseId, 'INCLUDES');

                if (r.templateId) {
                    await mergeNode(context, 'ClauseType', {identifier: shortTypeName});
                    const templateProperties:Neo4jSupportedProperties = {
                        content: template.content.markdown,
                        identifier: r.templateId,
                        name: template.name,
                        description: template.description ? template.description : '',
                        lifecycleState: template.lifecycleState,
                        languageTag: template.languageTag,
                        jurisdiction: template.templateAttributes.jurisdiction,
                        type: shortTypeName
                    }
                    if(templateProperties.content) {
                        const embeddingResponse = await getEmbedding(templateProperties.content as string);
                        if(embeddingResponse.ok) {
                            const embedding = await embeddingResponse.json();
                            templateProperties.embedding = embedding.data[0].embedding;
                        }
                        else {
                            throw new Error('Failed to get template embeddings');
                        }
                    }    
                    await mergeNode(context, 'Template', templateProperties);
                    await mergeRelationship(context, 'Template', r.templateId, 'ClauseType', shortTypeName, 'TYPE_OF');
                    await mergeRelationship(context, 'Clause', clauseId, 'Template', r.templateId, 'CREATED_FROM');
                }
            }
            else {
                console.log(`Failed to find template ${r.templateId}`);
            }
        })
    }
}

export type GraphContext = {
    placeholder?: string;
}

export async function initGraph(): Promise<GraphContext> {
    await neogma.verifyConnectivity();
    await createIndex();
    return {};
}